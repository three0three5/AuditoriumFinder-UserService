openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Friend Requests Controller
  description: API для авторизованного пользователя и операций над его заявками в
    друзья
- name: Account Changes API
  description: "API, предназначенное исключительно для AuthService для поддержки к\
    онсистентности данных об аккаунте и профиле. Api Gateway ни в коем случае не д\
    олжен пересылать сюда запросы"
- name: Users API
  description: Общие операции над пользователями со стороны текущего авторизованного
    пользователя
- name: Profiles API
  description: Операции над профилем авторизованного пользователя и получения данных
    профилей других пользователей
paths:
  /user/{id}/report:
    post:
      tags:
      - Users API
      summary: Отправка жалобы на юзера
      description: Позволяет отправить репорт с предоставлением описания жалобы
      operationId: reportUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShortUserResponse'
  /requests/out/{id}/remove:
    post:
      tags:
      - Friend Requests Controller
      summary: Отклонить запрос в друзья
      description: Отменить запрос в друзьяот авторизованного к указанному (исходящую)
      operationId: removeOutgoingRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShortUserResponse'
  /requests/in/{id}/decline:
    post:
      tags:
      - Friend Requests Controller
      summary: Отклонить запрос в друзья
      description: Логика подобнапредыдущему методу. Запрос от указанного к авторизованному
        (входящая)
      operationId: declineIncomingRequestFromUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShortUserResponse'
  /requests/in/{id}/accept:
    post:
      tags:
      - Friend Requests Controller
      summary: Принять запрос в друзья
      description: "Принять запрос от указанного в пути к авторизованному. Если та\
        кой id не отправлял заявку или такого id не существует, ничего не произойд\
        ет и вернется 200 с пустым телом, иначе возвращается короткий профиль указ\
        анного юзера"
      operationId: makeFriendRequest
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShortUserResponse'
  /account/{id}:
    post:
      tags:
      - Account Changes API
      summary: Создание профиля
      description: Выполняется сразу после создания аккаунта
      operationId: createProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreateRequest'
        required: true
      responses:
        "201":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullProfileResponse'
    delete:
      tags:
      - Account Changes API
      summary: Удаление профиля
      description: "Удаляет все ассоциации в UserService, связанные с даннымаккаун\
        том"
      operationId: deleteProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShortUserResponse'
  /user/profile:
    patch:
      tags:
      - Profiles API
      summary: Редактирование никнейма
      operationId: editNickname
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileChangeRequest'
        required: true
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullProfileResponse'
  /user/profile/visibility:
    patch:
      tags:
      - Profiles API
      summary: Смена видимости полей
      description: "Меняет видимость переданного поля (telegramVisibility - может\
        \ иметь видимость private friends_only, public;emailVisibility - может име\
        ть видимость private, friends_only, public;остальные поля профиля публичны\
        \ всегда, кроме местоположения (ответствененAuditoriumService)"
      operationId: changeVisibility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisibilityChangeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullProfileResponse'
  /account/{id}/tg:
    delete:
      tags:
      - Account Changes API
      summary: Удаление телеграма
      description: Удаляет из профиля запись о телеграме
      operationId: removeTelegram
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullProfileResponse'
    patch:
      tags:
      - Account Changes API
      summary: Добавление телеграма
      description: Добавляет в профиль запись о телеграме (видимость по умолчанию
        private)
      operationId: addTelegram
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullProfileResponse'
  /user/search:
    get:
      tags:
      - Users API
      summary: Поиск пользователей по критериям
      description: Позволяет найти пользователей по никнейму или набору тегов.Теги
        должны быть представлены своими идентификаторами
      operationId: searchByCriteria
      parameters:
      - name: nickname
        in: query
        required: true
        schema:
          type: string
      - name: tags
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortUserResponse'
  /user/profile/{id}:
    get:
      tags:
      - Profiles API
      summary: Получение профиля
      description: Позволяет получить поля пользователя в зависимостиот его отношения
        к посылающему запрос пользователю
      operationId: getProfileData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FullProfileResponse'
  /requests/out:
    get:
      tags:
      - Friend Requests Controller
      summary: Получение всех исходящих заявок клиента
      operationId: getOutgoingRequests
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortUserResponse'
  /requests/in:
    get:
      tags:
      - Friend Requests Controller
      summary: Получение всех входящих заявок клиента
      operationId: getIncomingRequests
      responses:
        "200":
          description: Успешная операция
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortUserResponse'
components:
  schemas:
    ReportRequest:
      required:
      - fromUserId
      type: object
      properties:
        fromUserId:
          type: integer
          format: int32
        description:
          type: string
    ShortUserResponse:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        userNickname:
          type: string
    ProfileCreateRequest:
      required:
      - email
      - id
      - nickname
      type: object
      properties:
        id:
          type: integer
          format: int32
        nickname:
          type: string
        email:
          type: string
        telegramHandler:
          type: string
    FullProfileResponse:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        userNickname:
          type: string
        userTags:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
        telegramHandler:
          type: string
        telegramVisibility:
          type: string
          enum:
          - PUBLIC
          - FRIENDS_ONLY
          - PRIVATE
        email:
          type: string
        emailVisibility:
          type: string
          enum:
          - PUBLIC
          - FRIENDS_ONLY
          - PRIVATE
    TagResponse:
      type: object
      properties:
        tagId:
          type: string
        description:
          type: string
    ProfileChangeRequest:
      required:
      - nickname
      type: object
      properties:
        nickname:
          type: string
    VisibilityChangeRequest:
      type: object
      properties:
        telegramVisibility:
          type: string
          enum:
          - PUBLIC
          - FRIENDS_ONLY
          - PRIVATE
        emailVisibility:
          type: string
          enum:
          - PUBLIC
          - FRIENDS_ONLY
          - PRIVATE
