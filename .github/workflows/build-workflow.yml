name: build-workflow
run-name: ${{ github.actor }} ${{ github.event_name }}
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "release" ]
    types: [closed]

env:
  docker-tag: ${{ github.head_ref || github.ref_name }}-${GITHUB_SHA::7}

jobs:
  release-notification:
    runs-on: ubuntu-latest
    needs: [autotests]
    if: ${{ github.event.pull_request.merged && 
      github.event.pull_request.base.ref == 'release' }}
    steps:
    - name: Get Pull Request Title and Description
      id: pr_info
      run: |
        echo "::set-output name=title::${{ github.event.pull_request.title }}"
        echo "::set-output name=description::${{ github.event.pull_request.body }}"
    
    - name: Make HTTP Request
      run: |
          curl -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
          -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d "text=New UserService release: 
            Title: ${{ steps.pr_info.outputs.title }} 
            Description: 
            ${{ steps.pr_info.outputs.description }}" \
          -d "message_thread_id=${{ secrets.TELEGRAM_THREAD_ID }}"

  autotests:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event_name == 'pull_request' && 
      github.event.pull_request.base.ref == 'release' }}
    steps:
      - run: |
          echo Autotest run
      
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Maven clean package
        run: mvn clean package

      - name: Build Docker image
        run: docker build --tag ${{ secrets.DOCKERHUB_USERNAME }}/audf-userservice:${{ env.docker-tag }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push the image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/audf-userservice:${{ env.docker-tag }}

      - name: Tag Docker image as latest
        run: |
          docker image tag \
            ${{ secrets.DOCKERHUB_USERNAME }}/audf-userservice:${{ env.docker-tag }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/audf-userservice:latest
        if: ${{ github.event.pull_request.merged && 
          github.event.pull_request.base.ref == 'release' }}

      - name: Push latest image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/audf-userservice:latest
        if: ${{ github.event.pull_request.merged && 
          github.event.pull_request.base.ref == 'release' }}

    outputs:
      docker-tag: ${{ env.docker-tag }}
